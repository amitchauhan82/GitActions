# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and deploy ASP.Net Core app to AWS BeanStalk

env:
  DOTNET_VERSION: '6.0.404'

on:
  # push:
  #   branches: 
  #     - 'dev'
  pull_request:
    branches: 
      - 'releases/*'
      - 'master'
      - 'dev'

jobs:
  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Git setup
  #     uses: actions/checkout@v3

  #   - name: Set up .NET Core
  #     uses: actions/setup-dotnet@v3
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}
    
  #   - name: Restore dependencies
  #     run: cd src; dotnet restore
    
  #   - name: Build
  #     run: cd src; dotnet build --no-restore
    
  #   - name: Test
  #     run: cd src; dotnet test --no-build --verbosity normal

  deploy-dev:
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}     
    runs-on: windows-latest
    environment: development
    if: (github.head_ref || github.ref_name) == 'dev'
    steps:
      - name: Print Branch Name
        run: echo ${{env.BRANCH_NAME}}

      - name: Git setup
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: cd src; dotnet restore
      
      - name: Build
        run: cd src; dotnet build

      - name: Publish site
        run:  cd src; dotnet publish --configuration "Release" -f net6.0 -r win10-x64 --self-contained "false" -o ../site
        #run:  cd src; dotnet restore; dotnet build; dotnet publish --configuration "Release" --self-contained "false" -o ../site

      - name: Generate site.zip
        run: Compress-Archive -Path ".\site\*" "site.zip"

      - name: Generate web.zip
        run: Compress-Archive -Path ".\site.zip", "aws-windows-deployment-manifest.json" "web.zip"

      # - name: Deploy to EB
      #   uses: einaregilsson/beanstalk-deploy@v21
      #   with:
      #     aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
      #     aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      #     application_name: pi-insurance
      #     environment_name: Piinsurance-env
      #     version_label: "ver-${{ github.sha }}"
      #     region: ap-southeast-2
      #     deployment_package: web.zip 

  deploy-prod:
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
    runs-on: windows-latest
    environment: prod
    if: (github.event.pull_request.base.ref) == 'master'
    steps:
      - name: Print Branch Name
        run: echo ${{env.BRANCH_NAME}}

      - name: Git setup
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: cd src; dotnet restore
      
      - name: Build
        run: cd src; dotnet build

      - name: Publish site
        run:  cd src; dotnet publish --configuration "Release" -f net6.0 -r win10-x64 --self-contained "false" -o ../site
        #run:  cd src; dotnet restore; dotnet build; dotnet publish --configuration "Release" --self-contained "false" -o ../site

      - name: Generate site.zip
        run: Compress-Archive -Path ".\site\*" "site.zip"

      - name: Generate web.zip
        run: Compress-Archive -Path ".\site.zip", "aws-windows-deployment-manifest.json" "web.zip"

